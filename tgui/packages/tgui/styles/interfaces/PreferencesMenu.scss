@use 'sass:map';

$department_map: (
  'Assistant': var(--color-gray),
  'Captain': hsl(215, 90%, 40%),
  'Cargo': hsl(35, 40%, 40%),
  'Security': hsl(0, 60%, 45%),
  'Engineering': hsl(40, 100%, 30%),
  'Medical': hsl(195, 75%, 35%),
  'Science': hsl(275, 90%, 35%),
  'Service': hsl(140, 70%, 30%),
  'Silicon': hsl(210, 30%, 40%),
  'NTRepresentation': hsl(210, 100%, 25%),
  'Justice': hsl(325, 80%, 40%),
);

.PreferencesMenu {
  &__Department {
    --button-width: 40px;
    --button-gap: 0.25rem;
    overflow: hidden;

    &.head .job-name {
      font-weight: bold;
    }

    .job-name {
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
      line-height: 1.1;
      padding: 0.2em 0.33em;
      text-shadow: 1px 1px 0px black;
    }

    .options {
      display: flex;
      gap: var(--button-gap);
      padding: 2px;
      text-align: right;

      .Button {
        display: inline-flex;
        justify-content: center;
        margin: 0;
        padding: 0;
        transition: transform var(--transition-time-medium);
        transition-delay: var(--transition-time-medium);
        z-index: 0;
      }
    }

    &:first-child {
      border-radius: var(--border-radius-medium) var(--border-radius-medium) 0 0;
    }

    &:last-child {
      border-radius: 0 0 var(--border-radius-medium) var(--border-radius-medium);
    }

    &:only-child {
      border-radius: var(--border-radius-medium);
    }

    @each $department-name, $color in $department_map {
      &--#{$department-name} {
        background: $color;
        border: var(--border-thickness-tiny) outset;
        border-color: hsl(from $color h s calc(l + 10));

        &.head {
          background: hsl(from $color h s calc(l - 7.5));
        }

        .Button {
          $button-color: hsl(from $color h s calc(l - 7.5));
          $button-color-off: hsl(from $button-color h s calc(l - 7.5));

          &:after {
            content: '';
            position: absolute;
            inset: 0;
            background-color: $button-color;
            border-radius: var(--border-radius-tiny);
            z-index: -1;
          }

          &:hover:not(.selected):after {
            background-color: $color;
            border: 1px solid $button-color-off;
          }

          &.off.selected:after {
            background-color: $button-color-off !important;
          }

          &:before {
            content: '';
            position: absolute;
            inset: calc(-1 * var(--button-gap));
            background-color: $color;
            z-index: -2;
          }
        }
      }
    }

    &--Captain {
      box-shadow: var(--shadow-glow-small) -1px var(--color-gold);
    }
  }

  &__Priority {
    position: relative;

    &:hover .PreferencesMenu__PriorityButton {
      transform: translateX(
        calc(
          -1 * (var(--button-width) - var(--button-gap) * -1) *
            var(--button-position)
        )
      );
    }

    &Button {
      width: var(--button-width);

      &:not(.selected) {
        position: absolute;
      }

      &.selected {
        cursor: var(--cursor-default);
        z-index: 1 !important;

        &.low:after {
          background-color: var(--color-bad) !important;
        }

        &.mid:after {
          background-color: var(--color-average) !important;
        }

        &.high:after {
          background-color: hsl(
            from var(--color-good) h s calc(l + 5)
          ) !important;
        }
      }
    }
  }
}
