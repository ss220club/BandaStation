@use 'sass:map';
@use '../base.scss';

$department_map: (
  'Assistant': var(--color-gray),
  'Captain': hsl(215, 90%, 40%),
  'Cargo': hsl(35, 40%, 40%),
  'Security': hsl(0, 60%, 45%),
  'Engineering': hsl(40, 100%, 30%),
  'Medical': hsl(195, 75%, 35%),
  'Science': hsl(275, 90%, 35%),
  'Service': hsl(140, 70%, 30%),
  'Silicon': hsl(210, 30%, 40%),
  'NTRepresentation': hsl(210, 100%, 25%),
  'Justice': hsl(325, 80%, 40%),
);

// MARK: CommonStyles
.PreferencesMenu {
  --pref-background: var(--color-base);
  --pref-border: hsl(from var(--pref-background) h s calc(l + 5));
  --color-border-dark: var(--pref-border);
  --progress-bar-background: var(--comp-background);
  --comp-background: hsl(from var(--pref-background) h s calc(l - 5));
  --comp-size: 1.667em;
  --comp-size-border: calc(var(--comp-size) * 0.1);

  .Toggle {
    cursor: var(--cursor-pointer);
    align-items: center;
    justify-content: center;
    width: calc(var(--comp-size) * 2 + var(--comp-size-border) * 2);
    height: var(--comp-size);
    background-color: var(--comp-background);
    color: var(--color-text-translucent-light);
    border: var(--comp-size-border) solid var(--pref-border);
    border-radius: var(--border-radius-medium);
    transition: border-color var(--transition-time-medium);

    &--checked {
      --switch-transform: 100%;
      --pref-border: var(--color-primary);
    }

    &__Switch {
      width: var(--comp-size);
      height: var(--comp-size);
      background-color: var(--pref-border);
      border-radius: var(--border-radius-tiny);
      transition-property: transform, background-color;
      transition-duration: var(--transition-time-medium);
      transform: scale(0.6) translateX(var(--switch-transform, -100%));
    }

    &:hover .Toggle__Switch {
      background-color: hsl(
        from var(--pref-border) h s calc(l + var(--adjust-hover))
      );
    }
  }

  .ColorInput {
    &__Color {
      height: 1.667em;
      aspect-ratio: 1 / 1;
      border-radius: var(--border-radius-small);
      border: 2px solid hsla(0, 0%, 0%, 0.5);
      transform: scale(0.75);
    }

    &__Text {
      align-content: center;
      height: 100%;
      padding: 0 var(--space-s) 0 var(--space-m);
    }
  }

  &__Section {
    --section-separator-thickness: 0;
    background-color: var(--color-section);

    .Section__title {
      text-align: right;
      padding: 0.5rem 1rem;
      padding-left: 0.75rem;

      &Text {
        font-size: 2rem;
        color: hsl(from var(--color-primary) h s calc(l + var(--adjust-color)));
      }
    }

    &.Sidebar .Tabs {
      padding-top: var(--space-ml);
      margin-right: calc(-1 * var(--space-m) - var(--border-thickness-small));
    }

    &Search {
      font-size: 0.66em;
      align-self: center;

      .Input {
        font-size: 1em;
      }
    }
  }

  &__Content {
    border: var(--border-thickness-small) solid
      hsl(from var(--color-primary) h s l / 0.75);
    border-bottom: none;
    border-right: none;
    box-shadow: inset 0.25rem 0.25rem 0.5rem -0.25rem var(--color-primary);
  }

  &__Preference {
    user-select: none;
    align-items: center;
    padding: 0.5rem;
    background-color: hsl(from var(--pref-background) h s calc(l - 2.5));
    border-radius: var(--border-radius-medium);
    border: var(--border-thickness-tiny) solid var(--pref-border);
    transition: background-color var(--transition-time-medium);

    &--desc {
      font-size: 0.8em;
      color: var(--color-text-translucent);
    }

    &--Preferences {
      width: 17.5rem;
    }

    &--Keybindings {
      width: 50%;

      .Button {
        align-content: center;
        line-height: 1px;
        height: var(--comp-size);
        background-color: var(--comp-background) !important;
        color: var(--color-text-translucent);
        border: var(--comp-size-border) solid var(--pref-border);
        border-radius: var(--border-radius-small);
        transition: border-color var(--transition-time-medium);

        &:hover {
          border-color: hsl(
            from var(--pref-border) h s calc(l + var(--adjust-hover))
          );
        }

        &__content {
          font-size: 0.8em;
        }

        &--selected {
          --pref-border: var(--color-good);
          color: var(--color-text);
        }
      }
    }
  }

  &__ChoicedSelection {
    padding: var(--space-m);
    background-color: var(--color-base);
    box-shadow: 0 0.5em 1em hsla(0, 0%, 0%, 0.5);

    &.Characters {
      width: 20rem;
      height: 26rem;
    }
  }
}

// MARK: JobPage
.PreferencesMenu {
  &__Department {
    --button-width: 40px;
    --button-gap: 0.25rem;
    overflow: hidden;

    &.head .job-name {
      font-weight: bold;
    }

    .job-name {
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
      padding: var(--space-s) var(--space-m);
      text-shadow: 1px 1px 0px black;
    }

    .options {
      display: flex;
      gap: var(--button-gap);
      padding: 2px;
      text-align: right;

      .Button {
        display: inline-flex;
        justify-content: center;
        margin: 0;
        padding: 0;
        transition: transform var(--transition-time-medium);
        transition-delay: var(--transition-time-medium);
        z-index: 0;
      }
    }

    &:first-child {
      border-radius: var(--border-radius-medium) var(--border-radius-medium) 0 0;
    }

    &:last-child {
      border-radius: 0 0 var(--border-radius-medium) var(--border-radius-medium);
    }

    &:only-child {
      border-radius: var(--border-radius-medium);
    }

    @each $department-name, $color in $department_map {
      &--#{$department-name} {
        background-color: $color;
        border: var(--border-thickness-tiny) outset;
        border-color: hsl(from $color h s calc(l + 10));

        &.head {
          background-color: hsl(from $color h s calc(l - 7.5));
        }

        .Button {
          $button-color: hsl(from $color h s calc(l - 7.5));
          $button-color-off: hsl(from $button-color h s calc(l - 7.5));

          &:after {
            content: '';
            position: absolute;
            inset: 0;
            background-color: $button-color;
            border-radius: var(--border-radius-tiny);
            z-index: -1;
          }

          &:hover:not(.selected):after {
            background-color: $color;
            border: 1px solid $button-color-off;
          }

          &.off.selected:after {
            background-color: $button-color-off;
          }

          &:before {
            content: '';
            position: absolute;
            inset: calc(-1 * var(--button-gap));
            background-color: $color;
            z-index: -2;
          }
        }
      }
    }
  }

  &__Priority {
    position: relative;

    &:hover .PreferencesMenu__PriorityButton {
      transform: translateX(
        calc(
          -1 * (var(--button-width) - var(--button-gap) * -1) *
            var(--button-position)
        )
      );
    }

    &Button {
      width: var(--button-width);

      &:not(.selected) {
        position: absolute;
      }

      &.selected {
        cursor: var(--cursor-default);
        z-index: 1 !important;

        &.low:after {
          background-color: var(--color-bad) !important;
        }

        &.mid:after {
          background-color: var(--color-average) !important;
        }

        &.high:after {
          background-color: hsl(
            from var(--color-good) h s calc(l + var(--adjust-color))
          ) !important;
        }
      }
    }
  }
}

// MARK: AntagsPage
.PreferencesMenu__AntagsSelection {
  --cell-size: 9.75rem;
  display: grid;
  align-items: stretch;
  grid-template-columns: repeat(auto-fill, minmax(var(--cell-size), 1fr));
  grid-template-rows: repeat(
    auto-fill,
    calc(var(--cell-size) + var(--border-thickness-small) * 10)
  );

  &__Antag {
    cursor: var(--cursor-pointer);
    align-items: center;
    width: 100%;

    &.on {
      --antag-border: var(--color-good);
    }

    &.off,
    &.banned {
      --antag-border: var(--color-bad);
    }

    &Name {
      text-align: center;
      font-weight: bold;
    }

    &Icon {
      transform-origin: bottom;
      transition-property: transform, filter;
      transition-duration: var(--transition-time-medium);

      &--wrapper {
        overflow: hidden;
        position: relative;
        border: var(--border-thickness-small) solid var(--antag-border);
        border-radius: var(--border-radius-circular);
        box-shadow: var(--shadow-glow-medium) -1px var(--antag-border);
        transition-property: border-color, box-shadow, transform;
        transition-duration: var(--transition-time-medium);
      }
    }

    &:not(.banned):hover &Icon {
      filter: drop-shadow(0 0 0.5rem var(--antag-border));
      transform: scale(1.1);

      &--wrapper {
        transform: translateY(-0.25rem);
      }
    }

    &Ban {
      position: absolute;
      inset: 0;
      display: flex;
      align-items: center;
      background-color: hsl(from var(--antag-border) h s l / 0.25);
      z-index: 1;

      &:before,
      &:after {
        content: '';
        position: absolute;
        width: 100%;
        height: var(--border-thickness-medium);
        background-color: var(--antag-border);
        box-shadow: var(--shadow-glow-small) var(--color-black);
      }

      &:before {
        transform: rotate(45deg);
      }

      &:after {
        transform: rotate(-45deg);
      }
    }

    &DaysLeft {
      position: absolute;
      inset: 0;
      gap: 0.25rem;
      height: 3.5rem;
      align-self: center;
      justify-content: center;
      text-align: center;
      background-color: hsl(from var(--antag-border) h s calc(l - 25));
      box-shadow: var(--shadow-glow-medium) var(--antag-border);
      z-index: 2;

      div:last-child {
        font-size: 1.33rem;
      }
    }
  }
}

// MARK: QuirksPage
.PreferencesMenu__Quirks {
  &Quirk {
    &.negative {
      --quirk-background: hsl(from var(--color-bad) h 50 calc(l - 15));
      --quirk-border: hsl(from var(--quirk-background) h 50 calc(l + 5) / 0.2);
    }

    &.positive {
      --quirk-background: hsl(from var(--color-good) h 50 calc(l - 12.5));
      --quirk-border: hsl(from var(--quirk-background) h 50 calc(l + 5) / 0.2);
    }

    &.neutral {
      --quirk-background: hsl(from var(--color-base) h s calc(l + 5));
      --quirk-border: hsl(from var(--quirk-background) h s calc(l + 5) / 0.1);
    }

    overflow: hidden;
    background-color: var(--quirk-background);
    border: var(--border-thickness-tiny) solid var(--quirk-border);
    border-radius: var(--border-radius-medium);
    transition-property: transform, box-shadow;
    transition-duration: var(--transition-time-medium);

    &:not(.Unremovable):hover {
      cursor: var(--cursor-pointer);
      transform: translateY(-0.33rem);
      box-shadow: 0 0.33rem 0 hsl(from var(--quirk-border) h s l / 0.5);
    }

    &--Icon {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 5rem;
      background-color: var(--quirk-background2);
    }

    &--Name {
      padding: 0.25rem 0.5rem;
      background-color: var(--quirk-background2);
    }

    &--Desc {
      padding: 0.33rem;
      padding-left: 0.5rem;
      background-color: hsl(from var(--quirk-background) h s calc(l - 15));
      border-style: solid;
      border-width: 1px 0 0 1px;
      border-color: hsl(from var(--quirk-border) h s calc(l + 7.5) / 1);
      border-top-left-radius: var(--border-radius-medium);
      box-shadow: inset 3px 3px 2px -1px hsla(0, 0%, 0%, 0.25);
    }

    &.Unremovable {
      --quirk-border: var(--color-red);
    }
  }
}

// MARK: SpeciesPage
.PreferencesMenu__Species {
  overflow: hidden;
  display: flex;
  gap: 0.5rem;

  .ImageButton__image {
    padding: var(--space-s) var(--space-s) 0;
  }

  &__OverflowButton {
    cursor: var(--cursor-pointer);
    position: absolute;
    inset: 0 auto;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 4rem;
    background-color: hsl(from var(--color-base) h s 7.5 / 0.66);
    box-shadow: var(--shadow-direction) 0 0.66rem hsla(0, 0%, 0%, 0.5);
    backdrop-filter: var(--blur-medium);
    z-index: 3;

    &.left {
      --shadow-direction: 0.5rem;
      left: 0;
    }

    &.right {
      --shadow-direction: -0.5rem;
      right: 0;
    }

    i {
      opacity: 0.5;
    }

    &:hover i {
      opacity: 1;
    }
  }

  &__Perk {
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    background-color: hsl(
      from var(--perk-background) h s calc(l - var(--adjust-color))
    );
    border: 1px outset var(--perk-background);
    border-radius: var(--border-radius-small);

    &.green {
      --perk-background: var(--color-good);
    }

    &.grey {
      --perk-background: var(--color-grey);
    }

    &.red {
      --perk-background: var(--color-bad);
    }
  }

  &__History {
    color: var(--color-label);
    margin-bottom: 1lh;

    &:last-child {
      margin-bottom: 0;
    }
  }
}
